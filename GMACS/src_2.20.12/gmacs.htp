#if !defined(_GMACS_)
#  define _GMACS_

class model_data : public ad_comm{
  int jitflag;
  int simflag;
  int rseed;
  init_adstring datafile;
  init_adstring controlfile;
  init_adstring projectfile;
  init_adstring weightunit;
  init_adstring numbersunit;
  init_adstring StockName;
  data_int IsJittered;
  data_number sdJitter;
  data_int OutRefPars;
  data_int OutRecruit;
  data_int OutSSB;
  data_int Outfbar;
  data_int OutDynB0;
  data_int nyrRetro;
  data_int TurnOffPhase;
  data_int StopAfterFnCall;
  data_int CalcRefPoints;
  data_int usepinfile;
  data_int verbose;
  data_int dataeof;
  data_int syr;
  data_int nyr;
  int nyrRetroNo;
  data_int nseason;
  data_int nfleet;
  data_int nsex;
  data_int nshell;
  data_int nmature;
  data_int nclass;
  data_int season_recruitment;
  data_int season_growth;
  data_int season_ssb;
  data_int season_N;
  data_ivector nSizeSex;
  int n_grp;
  int nlikes;
  int Nyears;
  int Nyears2;
  ivector isex;
  ivector ishell;
  ivector imature;
  d3_array pntr_hmo;
  data_vector size_breaks;
  dvector mid_points;
  data_int m_prop_type;
  int m_dim;
  data_matrix m_prop_in;
  dmatrix m_prop;
  data_ivector season_type;
  data_int fmtCDS_in;
  data_int nCatchDF;
  ivector nCatchRows;
  d3_array dCatchData;
  dmatrix obs_catch;
  dmatrix obs_effort;
  d3_array dCatchData_out;
  dmatrix obs_catch_out;
  dmatrix catch_cv;
  dmatrix catch_dm;
  dmatrix catch_mult;
  ivector nFparams;
  ivector nYparams;
  d3_array fhit;
  d3_array yhit;
  dmatrix dmr;
  dmatrix fhitfut;
  data_int fmtRAD;
  data_int nSurveys;
  ivector SurveyType;
  int nSurveyRows;
  dmatrix dSurveyData;
  dvector obs_cpue;
  dvector cpue_cv;
  dvector cpue_sd;
  dvector cpue_cv_add;
  dvector cpue_time;
  data_int fmtZCs_in;
  data_int nSizeComps_in;
  ivector nSizeCompRows_in;
  ivector nSizeCompCols_in;
  d3_array d3_SizeComps_in;
  d3_array d3_obs_size_comps_in;
  dmatrix size_comp_sample_size_in;
  dmatrix size_comp_year_in;
  dmatrix size_comp_season_in;
  data_int GrowthObsType;
  data_int nGrowthObs;
  int NGrowthInputs;
  data_matrix dGrowthData;
  dvector dPreMoltSize;
  ivector iMoltIncSex;
  dvector dMoltInc;
  dvector dMoltIncCV;
  dvector mle_alpha;
  dvector mle_beta;
  ivector iMoltInitSizeClass;
  ivector iMoltEndSizeClass;
  ivector iMoltTimeAtLib;
  ivector iMoltTrans;
  ivector iMoltFleetRecap;
  ivector iMoltYearRecap;
  ivector iMoltSampSize;
  ivector MaxGrowTimeLibSex;
  int MaxGrowTimeLib;
  data_int NenvIndics;
  data_matrix EnvYrs;
  int NenvData;
  data_matrix EnvDataInp;
  dmatrix EnvData;
  data_int eof;
  ivector isizeTrans_pass;
  data_int nblocks;
  int maxblocks;
  ivector blocks;
  d3_array blocklimits;
  int PPnt;
  int n_deviations;
  int n_devvars;
  imatrix devpoints;
  dmatrix rdevpoints;
  data_vector model_controls;
  int rdv_syr;
  int rdv_eyr;
  int Term_molt;
  int rdv_phz;
  int bInitializeUnfished;
  int Refclass;
  int bSteadyState;
  double spr_lambda;
  int nSRR_flag;
  int rec_prop_phz;
  int ntheta;
  double init_sex_ratio;
  int BRP_rec_sexR;
  int NyrEquil;
  int devParPhase;
  int bias1;
  int bias2;
  int bias3;
  int bias4;
  dvector Rec_bias;
  data_matrix theta_control;
  dvector theta_ival;
  dvector theta_lb;
  dvector theta_ub;
  ivector theta_phz;
  ivector prior_theta_type;
  dvector prior_theta_p1;
  dvector prior_theta_p2;
  data_int lw_type;
  int lw_dim;
  int lw_dim2;
  dmatrix lw_alfa;
  dmatrix lw_beta;
  dmatrix mean_wt_in;
  d4_array mean_wt;
  data_matrix maturity;
  data_matrix legal;
  data_ivector nSizeClassRec;
  data_int use_func_mat;
  ivector bUseCustomGrowthMatrix2;
  ivector bUseGrowthIncrementModel2;
  ivector bUseCustomMoltProbability2;
  ivector bUseCustomMatureProbability2;
  imatrix Growth_controls;
  int n_Gpar;
  ivector nparGs;
  ivector G_block;
  dvector G_RW_sigma;
  imatrix GrowPnt;
  dmatrix Gpar_control;
  imatrix GtoIG;
  int PPstoreG;
  imatrix iYrsIncChanges;
  imatrix iYrsMoltChanges;
  imatrix iYrsMatureChanges;
  ivector nSizeIncVaries;
  int maxSizeIncVaries;
  ivector nMoltVaries;
  int maxMoltVaries;
  ivector nMatureVaries;
  int maxMatureVaries;
  dvector G_ival;
  dvector G_lb;
  dvector G_ub;
  ivector G_phz;
  ivector prior_Gtype;
  dvector prior_G_p1;
  dvector prior_G_p2;
  ivector G_relative;
  d4_array CustomGrowthMatrix;
  d3_array CustomMoltProbabilityMatrix;
  d3_array CustomMatureProbabilityMatrix;
  data_matrix M_controls;
  ivector M_relative;
  ivector M_type;
  ivector M_extra;
  ivector M_size_breakpnts;
  ivector M_mirror;
  ivector M_block;
  ivector M_block_fn;
  ivector M_env_link;
  ivector M_env_var;
  ivector M_RW;
  ivector M_RW_blk;
  dvector M_RW_sigma;
  ivector M_mirror_RW;
  int n_Mpar;
  int MaxMbreaks;
  int PPstoreM;
  imatrix Mbreaks;
  ivector MToIg;
  ivector MType;
  ivector MPoint;
  data_matrix M_pars;
  dvector M_ival;
  dvector M_lb;
  dvector M_ub;
  ivector M_phz;
  ivector prior_Mtype;
  dvector prior_M_p1;
  dvector prior_M_p2;
  imatrix slx_bsex_in;
  imatrix slx_type_in;
  imatrix slx_include_in;
  imatrix slx_extra_in;
  imatrix slx_max_at_1_in;
  imatrix slx_1_at_size;
  imatrix slx_nret;
  imatrix ret_max_in;
  imatrix slx_type_npar;
  int Nyears3;
  dmatrix CustomSelex;
  int n_Spar;
  imatrix nparSs;
  imatrix SelPnt;
  dmatrix Spar_control;
  imatrix StoIG;
  int PPstoreS;
  imatrix iYrsSelChanges;
  int nsel_use;
  ivector sel_patterns;
  ivector sel_patterns2;
  ivector nSelVaries;
  int maxSelVaries;
  int nsel_patterns;
  dvector S_ival;
  dvector S_lb;
  dvector S_ub;
  ivector S_phz;
  ivector prior_Stype;
  dvector prior_S_p1;
  dvector prior_S_p2;
  ivector S_relative;
  data_matrix q_controls;
  ivector q_anal;
  dvector cpue_lambda;
  dvector cpue_emphasis;
  ivector q_mirror;
  ivector q_env_var;
  ivector q_block;
  ivector q_env_link;
  ivector q_RW;
  ivector q_RW_blk;
  dvector q_RW_sigma;
  int n_qpar;
  ivector qToSurv;
  ivector qType;
  ivector qPoint;
  data_matrix q_pars;
  dvector q_ival;
  dvector q_lb;
  dvector q_ub;
  ivector q_phz;
  ivector prior_qtype;
  dvector prior_q_p1;
  dvector prior_q_p2;
  data_matrix add_cv_controls;
  ivector add_cv_mirror;
  ivector add_cv_block;
  ivector add_cv_env_link;
  ivector add_cv_env_var;
  ivector add_cv_RW;
  ivector add_cv_RW_blk;
  dvector add_cv_RW_sigma;
  int n_addcv_par;
  ivector AddcvToSurv;
  ivector AddcvType;
  dvector add_cv_ival;
  dvector add_cv_lb;
  dvector add_cv_ub;
  ivector prior_add_cv_type;
  dvector prior_add_cv_p1;
  dvector prior_add_cv_p2;
  ivector cv_phz;
  data_matrix add_cv_pars;
  dvector log_add_cv_ival;
  dvector log_add_cv_lb;
  dvector log_add_cv_ub;
  data_matrix f_controls;
  ivector f_phz;
  ivector foff_phz;
  dvector init_fbar;
  dvector log_init_fbar;
  dvector log_init_fbar_foff;
  dmatrix pen_fstd;
  dvector fbar_lb;
  dvector fbar_ub;
  dvector fdev_lb;
  dvector fdev_ub;
  dvector foff_lb;
  dvector foff_ub;
  data_ivector iSizeCompType_in;
  data_ivector bTailCompression_in;
  data_ivector iCompAggregator;
  data_ivector lf_catch_in;
  data_vector lf_lambda_in;
  data_vector lf_emphasis_in;
  int nSizeComps;
  ivector nSizeCompRows;
  ivector nSizeCompCols;
  ivector iSizeCompType;
  ivector bTailCompression;
  dvector lf_catch;
  dvector lf_lambda;
  dvector lf_emphasis;
  data_matrix log_vn_pars;
  dvector log_vn_ival;
  dvector log_vn_lb;
  dvector log_vn_ub;
  ivector log_vn_phz;
  dvector prior_log_vn_type;
  dvector prior_log_vn_p1;
  dvector prior_log_vn_p2;
  int nMapInpToAggSizeComps;
  imatrix mapInpToAggSizeComps;
  d3_array d3_obs_size_comps;
  dmatrix size_comp_sample_size;
  dmatrix size_comp_year;
  dmatrix size_comp_season;
  ivector ilike_vector;
  data_number tag_emphasis;
  data_vector catch_emphasis;
  data_matrix Penalty_fdevs;
  data_vector Penalty_emphasis;
  data_int eof_ctl;
  int n_deviations_est;
  dvector deviations_ival;
  ivector deviations_phz;
  data_int Calc_MSY;
  data_ivector Ffixed;
  data_int spr_syr;
  data_int spr_nyr;
  data_int spr_SexR_syr;
  data_int spr_SexR_nyr;
  data_int spr_aveF_syr;
  data_int spr_aveF_nyr;
  data_int spr_M_syr;
  data_int spr_M_nyr;
  data_int spr_Prop_syr;
  data_int spr_Prop_nyr;
  data_int spr_grow_yr;
  data_int spr_sel_syr;
  data_int spr_sel_nyr;
  data_number spr_target;
  data_int OFLTier;
  data_number OFLalpha;
  data_number OFLbeta;
  data_number OFLgamma;
  data_number ABCBuffer;
  data_int Compute_yield_prj;
  int Eqn_basis;
  int nproj;
  data_int pyr;
  int nprojVec;
  data_int Project_type;
  data_int prj_Nstrat;
  data_vector Proj_Levels;
  data_int prj_bycatch_on;
  data_int prj_replicates;
  data_number Fixed_prj_Bmsy;
  data_int proj_syr;
  data_int proj_nyr;
  data_int proj_SexR_syr;
  data_int proj_SexR_nyr;
  data_int proj_aveF_syr;
  data_int proj_aveF_nyr;
  data_int proj_M_syr;
  data_int proj_M_nyr;
  data_int proj_Prop_syr;
  data_int proj_Prop_nyr;
  data_int proj_grow_yr;
  data_int proj_sel_syr;
  data_int proj_sel_nyr;
  data_int Stock_rec_prj;
  data_int Age_at_rec_prj;
  data_int prj_futRec_syr;
  data_int prj_futRec_nyr;
  data_number mean_rec_prj;
  data_number SigmaR_prj;
  data_number Prow_prj;
  data_number Initial_eps;
  data_int Apply_HCR_prj;
  data_int Apply_StateHCR_prj;
  data_int NHCRpars;
  data_vector HCRpars;
  data_int max_prj;
  data_int full_prj_diag;
  data_int eof_prj;
  int IsProject;
  dvector xg;
  dvector wg;
  d3_array l1_vec;
  int NVarPar;
  int NEstPars;
  int NRefPars;
  int NRecPar;
  int NSSBPar;
  int NfbarPar;
  int NB0Par;
  int PhaseGrowthPar;
  int PhaseSelexPar;
  int NfunCall;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int hessian_phase(void)
  {
    return initial_params::in_hessian_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable& current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  dvariable adromb(dvariable(model_parameters::*f)(const dvariable&), double a, double b, int ns)
  {
    using namespace std::placeholders;
    _func func = std::bind(f, this, _1);
    return function_minimizer::adromb(func, a, b, ns);
  }
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number_vector theta;
  param_init_bounded_number_vector G_pars_est;
  param_init_bounded_number_vector M_pars_est;
  param_init_bounded_number_vector S_pars_est;
  param_init_bounded_number_vector log_fbar;
  param_init_bounded_vector_vector log_fdev;
  param_init_bounded_number_vector log_foff;
  param_init_bounded_vector_vector log_fdov;
  param_init_bounded_vector rec_dev_est;
  param_vector rec_dev;
  param_init_bounded_dev_vector logit_rec_prop_est;
  param_vector logit_rec_prop;
  param_init_bounded_number_vector log_vn;
  param_init_bounded_number_vector survey_q;
  param_init_bounded_number_vector log_add_cv;
  param_init_bounded_number_vector par_devs;
  param_vector priorDensity;
  param_matrix nloglike;
  param_vector nlogPenalty;
  param_matrix sdnr_MAR_cpue;
  param_matrix sdnr_MAR_lf;
  param_vector Francis_weights;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value objfun;
  param_number logR0;
  param_number logRbar;
  param_number logRini;
  param_vector ra;
  param_vector rbeta;
  param_number logSigmaR;
  param_number steepness;
  param_number rho;
  param_matrix logN0;
  param_matrix alpha;
  param_matrix beta;
  param_matrix gscale;
  param_matrix Linf;
  param_matrix Kappa;
  param_matrix SigmaKappa;
  param_matrix SigmaLinf;
  param_matrix rec_sdd;
  param_matrix molt_mu;
  param_matrix molt_cv;
  param_matrix mature_mu;
  param_matrix mature_cv;
  param_matrix rec_pass;
  param_vector totrecruits;
  param_matrix recruits;
  param_vector res_recruit;
  param_vector xi;
  param_matrix pre_catch;
  param_matrix res_catch;
  param_matrix obs_catch_effort;
  param_matrix pre_catch_out;
  param_matrix res_catch_out;
  param_vector log_q_catch;
  param_3array molt_increment;
  param_matrix molt_prob_pass;
  param_3array molt_probability;
  param_3array molt_probability_in;
  param_matrix mature_prob_pass;
  param_3array mature_probability;
  param_3array mature_probability_in;
  param_3array ProbMolt;
  param_4array growth_transition;
  param_matrix S_pars;
  param_4array log_slx_capture;
  param_4array log_slx_retaind;
  param_4array log_slx_discard;
  param_3array log_high_grade;
  param_number selex_smooth_pen;
  param_4array M;
  param_vector Mmult;
  param_matrix fout;
  param_vector finit;
  param_4array ft;
  param_4array F;
  param_4array F2;
  param_5array Z;
  param_5array Z2;
  param_6array S;
  param_5array SS_pass;
  param_4array d4_N;
  param_4array d4_N_init;
  param_3array d3_newShell;
  param_3array d3_oldShell;
  param_number TempSS;
  param_matrix SurveyQT;
  param_matrix AddVarQT;
  param_vector pre_cpue;
  param_vector res_cpue;
  param_vector res_cpue_stdzd;
  param_3array d3_pre_size_comps_in;
  param_3array d3_res_size_comps_in;
  param_3array d3_obs_size_comps_out;
  param_3array d3_pre_size_comps_out;
  param_3array d3_res_size_comps_out;
  param_3array d3_pre_size_comps;
  param_3array d3_res_size_comps;
  param_5array FullY;
  param_number ssb_pass;
  param_number ofltot_pass;
  param_number oflret_pass;
  param_vector log_fimpbar;
  param_vector log_fimpbarOFL;
  param_vector log_fimpbarPass;
  param_vector catch_pass;
  param_matrix catch_summary;
  param_vector dvar_mid_points;
  param_matrix histcat;
  param_vector spr_rbar;
  param_number spr_sexr;
  param_number ssbF0;
  param_number spr_bmsy;
  param_number spr_depl;
  param_number spr_cofl;
  param_number spr_cofl_ret;
  param_number spr_fofl;
  param_number Bmsy;
  param_vector proj_rbar;
  param_number SR_alpha_prj;
  param_number SR_beta_prj;
  param_number Steepness;
  param_matrix spr_yield;
  param_matrix fut_recruits;
  param_4array numbers_proj_gytl;
  param_vector OFLoutpass;
  param_vector gradientOut;
  param_stddev_matrix sd_log_recruits;
  param_stddev_vector ParsOut;
  param_vector sd_fmsy;
  param_vector sd_fofl;
  param_stddev_vector sd_log_ssb;
  param_stddev_number sd_last_ssb;
  param_vector dyn_Bzero;
  void between_phases_calculations(void);
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
  void initialize_model_parameters(void);
 dvar_vector timevarparV(const int itype, const int ipar, const int lyear,  const int blk, 
                                const int env_link, const int env_var,
                                const int RW, const int RW_blk, 
                                const int npars, ivector parpoints, dvar_vector pars);
 dvar_matrix timevarparM(const int itype, const int ipar, const int lyear,  
                                 const int isrelative, const int type, 
                                 const int sizebreaks, const int blk, const int block_fn, 
                                 const int env_link, const int env_var,
                                 const int extra,
                                 const int RW, const int RW_blk, 
                                 const int npars, ivector parpoints, dvar_vector pars);
  void init_selectivities(void);
  void calc_selectivities(void);
  void calc_fishing_mortality(void);
  void calc_natural_mortality(void);
  void calc_total_mortality(void);
  void calc_molting_probability(void);
 dvar_vector calc_growth_increments_data(const dvector vSizes, const ivector iSex, int igrow);
  void calc_growth_increments(void);
  void calc_growth_transition(void);
  void calc_mature_probability(void);
  void calc_recruitment_size_distribution(void);
  void calc_initial_numbers_at_length(void);
 void update_population_numbers_at_length_season(const int i, const int j, const int Case);
  void update_population_numbers_at_length(void);
  void calc_predicted_catch(void);
 dvariable calc_predicted_catch_det(const int i, const int j, const int h, const int k, const int type, const int unit);
  void calc_predicted_catch_out(void);
  void calc_relative_abundance(void);
  void calc_predicted_composition(void);
  void calc_stock_recruitment_relationship(void);
 dvariable get_prior_pdf(const int &pType, const dvariable &_theta, const double &p1, const double &p2);
  void calc_prior_densities(void);
  void catch_likelihood(void);
  void index_likelihood(void);
  void length_likelihood(void);
  void recruitment_likelihood(void);
  void growth_likelihood(void);
  void calc_objective_function(void);
  void simulation_model(void);
 dvar_vector calc_ssb();
 dvar_vector calc_ssba();
 dvar_matrix calc_brute_equilibrium(const int YrRefSexR1, const int YrRefSexR2, const int YrRef, const int YrRefGrow, 
											const int YrRefM1, const int YrRefM2, const int YrRefSea1, const int YrRefSea2,
											const int YrRefSel1, const int YrRefSel2, const int ninit);
 dvar_vector project_biomass(const int YrRef2, const int YrRefGrow, const int YrRefM1, const int YrRefM2, const int YrRefSea1,
									 const int YrRefSea2, const int YrRefSexR1, const int YrRefSexR2, const int YrRefSel1,
									 const int YrRefSel2, dvar_vector Rbar, const int iproj);
 void project_one_year(const int i, const int iproj, const int YrRef2, const int YrRefGrow, const int YrRefM1,
									  const int YrRefM2, const int YrRefSea1, const int YrRefSea2, const int YrRefSel1,
									  const int YrRefSel2, dvar_matrix rtt, dvar_matrix  rec_sdd, 
									  dvar_vector Rec_use, dvar_matrix d4_Pass);
 dvar_vector calc_predicted_project(const int YrRef2, const int YrRefGrow, const int YrRefSel1, const int YrRefSel2,
					    dvar3_array d4_Npass, dvar3_array _ft, dvar4_array _Z1, dvar4_array _Z2);
 dvar_vector compute_OFL_and_ABC(const int iyr, const int YrRefGrow, const int YrRefM1, const int YrRefM2,
										 const int YrRefSea1, const int YrRefSea2,const int YrRefSel1, const int YrRefSel2,
										 dvar_vector Rbar, dvar_matrix d4_Npass);
 dvariable project_biomass_OFL(const int iyr, const int YrRef2, const int YrRefGrow, 
        const int YrRefM1, const int YrRefM2, const int YrRefSea1, const int YrRefSea2, 
        const int YrRefSel1, const int YrRefSel2, dvar_vector Rbar, const int iproj, dvar_matrix d4_Npass);
 void calc_spr_reference_points2(const int DoProfile);
  void write_eval(void);
  void calc_sdreport(void);
 void get_all_sdnr_MAR();
 dvector calc_sdnr_MAR(dvector tmpVec);
 dvector calc_sdnr_MAR(dmatrix tmpMat);
 dvector calc_Francis_weights();
 adstring strg(double d);
 adstring to_str(const dvector& v);
 adstring to_str(const dvar_vector& v);
  void CreateOutput(void);
  void WriteFiles(void);
  void MyOutput(void);
 dvariable CalcStateTAC(const int i, const int iproj,const int YrRefGrow);
 dvariable StMatsTAC(const int j, const int iproj,const int YrRefGrow);

};
#endif
