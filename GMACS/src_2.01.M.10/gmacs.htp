#if !defined(_GMACS_)
#  define _GMACS_

class model_data : public ad_comm{
  int simflag;
  int rseed;
  init_adstring datafile;
  init_adstring controlfile;
  init_adstring projectfile;
  init_adstring weightunit;
  init_adstring numbersunit;
  init_adstring StockName;
  data_int IsJittered;
  data_number sdJitter;
  data_int OutRefPars;
  data_int OutRecruit;
  data_int OutSSB;
  data_int Outfbar;
  data_int OutDynB0;
  data_int nyrRetro;
  data_int TurnOffPhase;
  data_int StopAfterFnCall;
  data_int CalcRefPoints;
  data_int usepinfile;
  data_int verbose;
  data_int dataeof;
  data_int syr;
  data_int nyr;
  int nyrRetroNo;
  data_int nseason;
  data_int nfleet;
  data_int nsex;
  data_int nshell;
  data_int nmature;
  data_int nclass;
  data_int season_recruitment;
  data_int season_growth;
  data_int season_ssb;
  data_int season_N;
  data_ivector nSizeSex;
  int n_grp;
  int nlikes;
  ivector isex;
  ivector ishell;
  ivector imature;
  d3_array pntr_hmo;
  data_vector size_breaks;
  dvector mid_points;
  data_int m_prop_type;
  int m_dim;
  data_matrix m_prop_in;
  dmatrix m_prop;
  data_ivector season_type;
  data_int fmtCDS_in;
  data_int nCatchDF;
  ivector nCatchRows;
  d3_array dCatchData;
  dmatrix obs_catch;
  dmatrix obs_effort;
  d3_array dCatchData_out;
  dmatrix obs_catch_out;
  dmatrix catch_cv;
  dmatrix catch_dm;
  dmatrix catch_mult;
  ivector nFparams;
  ivector nYparams;
  d3_array fhit;
  d3_array yhit;
  dmatrix dmr;
  dmatrix fhitfut;
  data_int fmtRAD;
  data_int nSurveys;
  ivector SurveyType;
  int nSurveyRows;
  dmatrix dSurveyData;
  dvector obs_cpue;
  dvector cpue_cv;
  dvector cpue_sd;
  dvector cpue_cv_add;
  dvector cpue_time;
  data_int fmtZCs_in;
  data_int nSizeComps_in;
  ivector nSizeCompRows_in;
  ivector nSizeCompCols_in;
  d3_array d3_SizeComps_in;
  d3_array d3_obs_size_comps_in;
  dmatrix size_comp_sample_size_in;
  dmatrix size_comp_year_in;
  dmatrix size_comp_season_in;
  data_int GrowthObsType;
  data_int nGrowthObs;
  int NGrowthInputs;
  data_matrix dGrowthData;
  dvector dPreMoltSize;
  ivector iMoltIncSex;
  dvector dMoltInc;
  dvector dMoltIncCV;
  dvector mle_alpha;
  dvector mle_beta;
  ivector iMoltInitSizeClass;
  ivector iMoltEndSizeClass;
  ivector iMoltTimeAtLib;
  ivector iMoltTrans;
  ivector iMoltFleetRecap;
  ivector iMoltYearRecap;
  ivector iMoltSampSize;
  ivector MaxGrowTimeLibSex;
  int MaxGrowTimeLib;
  data_int NenvIndics;
  data_matrix EnvYrs;
  int NenvData;
  data_matrix EnvDataInp;
  dmatrix EnvData;
  data_int eof;
  data_int ntheta;
  data_matrix theta_control;
  dvector theta_ival;
  dvector theta_lb;
  dvector theta_ub;
  ivector theta_phz;
  data_int lw_type;
  int lw_dim;
  int lw_dim2;
  dmatrix lw_alfa;
  dmatrix lw_beta;
  dmatrix mean_wt_in;
  d4_array mean_wt;
  data_matrix maturity;
  data_matrix legal;
  data_int use_func_mat;
  data_int bUseCustomGrowthMatrix;
  data_int bUseGrowthIncrementModel;
  data_int bUseCustomMoltProbability;
  data_ivector nSizeClassRec;
  int maxSizeIncVaries;
  data_ivector nSizeIncVaries;
  ivector nSizeIncChanges;
  data_imatrix iYrsSizeIncChanges;
  int maxMoltVaries;
  data_ivector nMoltVaries;
  ivector nMoltChanges;
  data_imatrix iYrsMoltChanges;
  data_int BetaParRelative;
  imatrix iYrIncChanges;
  int nGrwth;
  int nSizeIncPar;
  data_matrix Grwth_control;
  dvector Grwth_ival;
  dvector Grwth_lb;
  dvector Grwth_ub;
  ivector Grwth_phz;
  d4_array CustomGrowthMatrix;
  d3_array CustomMoltProbabilityMatrix;
  int nslx;
  int nslx_pars;
  int nslx_rows_in;
  int nslx_cols_in;
  int nslx_envpars;
  int nslx_devpars;
  data_ivector slx_nsel_period_in;
  data_ivector slx_bsex_in;
  data_imatrix slx_type_in;
  data_ivector slx_include_in;
  data_imatrix slx_extra_in;
  imatrix slx_type_npar;
  data_ivector ret_nret_period_in;
  data_ivector ret_bsex_in;
  data_imatrix ret_type_in;
  data_imatrix slx_nret;
  data_imatrix ret_extra_in;
  imatrix ret_type_npar;
  data_ivector slx_max_at_1_in;
  data_matrix slx_control_in;
  imatrix slx_control;
  ivector slx_indx;
  ivector slx_gear;
  ivector slx_type;
  ivector slx_isex;
  ivector slx_styr;
  ivector slx_edyr;
  ivector slx_cols;
  ivector slx_npar;
  ivector slx_incl;
  ivector slx_extra;
  ivector slx_max_at_1;
  dmatrix slx_par;
  d3_array slx_priors;
  dvector slx_lb;
  dvector slx_ub;
  ivector slx_phzm;
  ivector slx_envlink;
  ivector slx_envvar;
  ivector slx_RdWalk_dev_type;
  dvector slx_dev_sigma;
  ivector slx_styr_RdWalk;
  ivector slx_edyr_RdWalk;
  ivector slx_timeVar;
  dvector log_slx_pars_init;
  data_int NumAsympRet;
  data_matrix AsympSel_control;
  ivector AsympSel_fleet;
  ivector AsympSel_sex;
  ivector AsympSel_year;
  dvector AsympSel_ival;
  dvector AsympSel_lb;
  dvector AsympSel_ub;
  ivector AsympSel_phz;
  int nslx_envpardim;
  dvector SlxEnvPar_ival;
  dvector SlxEnvPar_lb;
  dvector SlxEnvPar_ub;
  ivector SlxEnvPar_phz;
  int nslx_devpardim;
  dvector SlxDevPar_ival;
  ivector SlxDevPar_phz;
  data_int devParPhase;
  data_matrix q_controls;
  dvector q_ival;
  dvector q_lb;
  dvector q_ub;
  ivector q_phz;
  ivector prior_qtype;
  dvector prior_p1;
  dvector prior_p2;
  ivector q_anal;
  dvector cpue_lambda;
  dvector cpue_emphasis;
  data_matrix add_cv_controls;
  data_ivector add_cv_links;
  dvector add_cv_ival;
  dvector add_cv_lb;
  dvector add_cv_ub;
  ivector prior_add_cv_type;
  dvector prior_add_cv_p1;
  dvector prior_add_cv_p2;
  ivector cv_phz;
  dvector log_add_cv_ival;
  dvector log_add_cv_lb;
  dvector log_add_cv_ub;
  ivector use_add_var_par;
  data_matrix f_controls;
  ivector f_phz;
  ivector foff_phz;
  dvector pen_fbar;
  dvector log_pen_fbar;
  dvector log_pen_fbar_foff;
  dmatrix pen_fstd;
  dvector fbar_lb;
  dvector fbar_ub;
  dvector fdev_lb;
  dvector fdev_ub;
  dvector foff_lb;
  dvector foff_ub;
  data_ivector nAgeCompType_in;
  data_ivector bTailCompression_in;
  data_vector nvn_ival_in;
  data_ivector nvn_phz_in;
  data_ivector iCompAggregator;
  data_ivector lf_catch_in;
  data_vector lf_lambda_in;
  data_vector lf_emphasis_in;
  int nSizeComps;
  ivector nSizeCompRows;
  ivector nSizeCompCols;
  ivector nAgeCompType;
  ivector bTailCompression;
  dvector log_nvn_ival;
  ivector nvn_phz;
  dvector lf_catch;
  dvector lf_lambda;
  dvector lf_emphasis;
  d3_array d3_obs_size_comps;
  dmatrix size_comp_sample_size;
  dmatrix size_comp_year;
  dmatrix size_comp_season;
  ivector ilike_vector;
  int nMdev;
  data_int m_type;
  int MrelFem;
  data_int Mdev_phz_def;
  data_number m_stdev;
  data_ivector m_nNodes_sex;
  data_imatrix m_nodeyear_sex;
  data_int nSizeDevs;
  data_ivector m_size_nodeyear;
  data_int Init_Mdev;
  ivector nMdev_par_cnt;
  dvector Mdev_ival;
  dvector Mdev_lb;
  dvector Mdev_ub;
  ivector Mdev_phz;
  ivector Mdev_spec;
  data_number tag_emphasis;
  data_int m_maturity;
  int n_mat_m;
  data_matrix m_mat_controls;
  dvector m_mat_ival;
  dvector m_mat_lb;
  dvector m_mat_ub;
  ivector prior_m_mat_type;
  dvector prior_m_mat_p1;
  dvector prior_m_mat_p2;
  ivector m_mat_phz;
  dvector log_m_mat_ival;
  dvector log_m_mat_lb;
  dvector log_am_mat_ub;
  data_vector model_controls;
  int rdv_syr;
  int rdv_eyr;
  int Term_molt;
  int rdv_phz;
  int rec_ini_phz;
  int bInitializeUnfished;
  int bSteadyState;
  double spr_lambda;
  int nSRR_flag;
  int rec_prop_phz;
  int nthetatest;
  double init_sex_ratio;
  int BRP_rec_sexR;
  int NyrEquil;
  data_vector catch_emphasis;
  data_matrix Penalty_fdevs;
  data_vector Penalty_emphasis;
  data_int eof_ctl;
  data_int Calc_MSY;
  data_ivector Ffixed;
  data_int spr_syr;
  data_int spr_nyr;
  data_int spr_SexR_syr;
  data_int spr_SexR_nyr;
  data_int spr_aveF_syr;
  data_int spr_aveF_nyr;
  data_int spr_M_syr;
  data_int spr_M_nyr;
  data_int spr_Prop_syr;
  data_int spr_Prop_nyr;
  data_int spr_grow_yr;
  data_int spr_sel_syr;
  data_int spr_sel_nyr;
  data_number spr_target;
  data_int OFLTier;
  data_number OFLalpha;
  data_number OFLbeta;
  data_number OFLgamma;
  data_number ABCBuffer;
  data_int Compute_yield_prj;
  int Eqn_basis;
  int nproj;
  data_int pyr;
  data_int Project_type;
  data_int prj_Nstrat;
  data_vector Proj_Levels;
  data_int prj_bycatch_on;
  data_int prj_replicates;
  data_number Fixed_prj_Bmsy;
  data_int proj_syr;
  data_int proj_nyr;
  data_int proj_SexR_syr;
  data_int proj_SexR_nyr;
  data_int proj_aveF_syr;
  data_int proj_aveF_nyr;
  data_int proj_M_syr;
  data_int proj_M_nyr;
  data_int proj_Prop_syr;
  data_int proj_Prop_nyr;
  data_int proj_grow_yr;
  data_int proj_sel_syr;
  data_int proj_sel_nyr;
  data_int Stock_rec_prj;
  data_int Age_at_rec_prj;
  data_int prj_futRec_syr;
  data_int prj_futRec_nyr;
  data_number mean_rec_prj;
  data_number SigmaR_prj;
  data_number Prow_prj;
  data_number Initial_eps;
  data_int Apply_HCR_prj;
  data_int Apply_StateHCR_prj;
  data_int NHCRpars;
  data_vector HCRpars;
  data_int max_prj;
  data_int full_prj_diag;
  data_int eof_prj;
  int IsProject;
  dvector xg;
  dvector wg;
  d3_array l1_vec;
  int NVarPar;
  int NEstPars;
  int NRefPars;
  int NRecPar;
  int NSSBPar;
  int NfbarPar;
  int NB0Par;
  int PhaseGrowthPar;
  int PhaseSelexPar;
  int NfunCall;
  int PPnt;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int hessian_phase(void)
  {
    return initial_params::in_hessian_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable& current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  dvariable adromb(dvariable(model_parameters::*f)(const dvariable&), double a, double b, int ns)
  {
    using namespace std::placeholders;
    _func func = std::bind(f, this, _1);
    return function_minimizer::adromb(func, a, b, ns);
  }
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number_vector theta;
  param_init_bounded_number_vector Grwth;
  param_init_bounded_number_vector log_slx_pars;
  param_init_bounded_number_vector Asymret;
  param_init_bounded_number_vector slx_env_pars;
  param_init_bounded_number_vector sel_devs;
  param_init_bounded_number_vector log_fbar;
  param_init_bounded_vector_vector log_fdev;
  param_init_bounded_number_vector log_foff;
  param_init_bounded_vector_vector log_fdov;
  param_init_bounded_vector rec_ini;
  param_init_bounded_vector rec_dev_est;
  param_vector rec_dev;
  param_init_bounded_dev_vector logit_rec_prop_est;
  param_vector logit_rec_prop;
  param_init_bounded_number_vector m_dev_est;
  param_vector m_dev;
  param_matrix m_dev_sex;
  param_vector Msize;
  param_init_bounded_number_vector m_mat_mult;
  param_init_number_vector log_vn;
  param_init_bounded_number_vector survey_q;
  param_init_bounded_number_vector log_add_cv;
  param_vector priorDensity;
  param_matrix nloglike;
  param_vector nlogPenalty;
  param_number logDevPenal;
  param_matrix sdnr_MAR_cpue;
  param_matrix sdnr_MAR_lf;
  param_vector Francis_weights;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value objfun;
  param_vector M0;
  param_number logR0;
  param_number logRbar;
  param_number logRini;
  param_vector ra;
  param_vector rbeta;
  param_number logSigmaR;
  param_number steepness;
  param_number rho;
  param_matrix logN0;
  param_matrix alpha;
  param_matrix beta;
  param_matrix gscale;
  param_matrix rec_sdd;
  param_matrix molt_mu;
  param_matrix molt_cv;
  param_matrix Linf;
  param_matrix Kappa;
  param_matrix SigmaKappa;
  param_matrix SigmaLinf;
  param_matrix recruits;
  param_vector res_recruit;
  param_vector xi;
  param_matrix pre_catch;
  param_matrix res_catch;
  param_matrix obs_catch_effort;
  param_matrix pre_catch_out;
  param_matrix res_catch_out;
  param_vector log_q_catch;
  param_3array molt_increment;
  param_3array molt_probability;
  param_3array molt_probability_in;
  param_3array ProbMolt;
  param_4array growth_transition;
  param_4array log_slx_capture;
  param_4array log_slx_retaind;
  param_4array log_slx_discard;
  param_3array log_high_grade;
  param_4array M;
  param_vector Mmult;
  param_matrix fout;
  param_vector finit;
  param_4array ft;
  param_4array F;
  param_4array F2;
  param_5array Z;
  param_5array Z2;
  param_6array S;
  param_4array d4_N;
  param_3array d3_newShell;
  param_3array d3_oldShell;
  param_number TempSS;
  param_vector pre_cpue;
  param_vector res_cpue;
  param_3array d3_pre_size_comps_in;
  param_3array d3_res_size_comps_in;
  param_3array d3_obs_size_comps_out;
  param_3array d3_pre_size_comps_out;
  param_3array d3_res_size_comps_out;
  param_3array d3_pre_size_comps;
  param_3array d3_res_size_comps;
  param_5array FullY;
  param_number ssb_pass;
  param_number ofltot_pass;
  param_number oflret_pass;
  param_vector log_fimpbar;
  param_vector log_fimpbarOFL;
  param_vector log_fimpbarPass;
  param_vector catch_pass;
  param_matrix catch_summary;
  param_vector dvar_mid_points;
  param_matrix histcat;
  param_vector spr_rbar;
  param_number spr_sexr;
  param_number ssbF0;
  param_number spr_bmsy;
  param_number spr_depl;
  param_number spr_cofl;
  param_number spr_cofl_ret;
  param_number spr_fofl;
  param_number Bmsy;
  param_vector proj_rbar;
  param_number SR_alpha_prj;
  param_number SR_beta_prj;
  param_number Steepness;
  param_matrix spr_yield;
  param_matrix fut_recruits;
  param_4array numbers_proj_gytl;
  param_vector OFLoutpass;
  param_vector gradientOut;
  param_stddev_matrix sd_log_recruits;
  param_stddev_vector ParsOut;
  param_vector sd_fmsy;
  param_vector sd_fofl;
  param_stddev_vector sd_log_ssb;
  param_stddev_number sd_last_ssb;
  param_vector dyn_Bzero;
  void between_phases_calculations(void);
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
  void initialize_model_parameters(void);
  void init_selectivities(void);
  void calc_selectivities(void);
  void calc_fishing_mortality(void);
  void calc_natural_mortality(void);
  void calc_total_mortality(void);
  void calc_molting_probability(void);
 dvar_vector calc_growth_increments_data(const dvector vSizes, const ivector iSex, int igrow);
  void calc_growth_increments(void);
  void calc_growth_transition(void);
  void calc_recruitment_size_distribution(void);
  void calc_initial_numbers_at_length(void);
  void update_population_numbers_at_length(void);
  void calc_predicted_catch(void);
 dvariable calc_predicted_catch_det(const int i, const int j, const int h, const int k, const int type, const int unit);
  void calc_predicted_catch_out(void);
  void calc_relative_abundance(void);
  void calc_predicted_composition(void);
  void calc_stock_recruitment_relationship(void);
 dvariable get_prior_pdf(const int &pType, const dvariable &_theta, const double &p1, const double &p2);
  void calc_prior_densities(void);
  void catch_likelihood(void);
  void index_likelihood(void);
  void length_likelihood(void);
  void recruitment_likelihood(void);
  void growth_likelihood(void);
  void calc_objective_function(void);
  void simulation_model(void);
 dvar_vector calc_ssb();
 dvar_vector calc_ssba();
 dvar_matrix calc_brute_equilibrium(const int YrRefSexR1, const int YrRefSexR2, const int YrRef, const int YrRefGrow, 
											const int YrRefM1, const int YrRefM2, const int YrRefSea1, const int YrRefSea2,
											const int YrRefSel1, const int YrRefSel2, const int ninit);
 dvar_vector project_biomass(const int YrRef2, const int YrRefGrow, const int YrRefM1, const int YrRefM2, const int YrRefSea1,
									 const int YrRefSea2, const int YrRefSexR1, const int YrRefSexR2, const int YrRefSel1,
									 const int YrRefSel2, dvar_vector Rbar, const int iproj);
 dvar4_array project_one_year(const int i, const int iproj, const int YrRef2, const int YrRefGrow, const int YrRefM1,
									  const int YrRefM2, const int YrRefSea1, const int YrRefSea2, const int YrRefSel1,
									  const int YrRefSel2, dvar_matrix MoltProb, dvar_matrix rtt, dvar_matrix  rec_sdd, 
									  dvar_vector Rec_use, dvar_matrix d4_Pass);
 dvar_vector calc_predicted_project(const int YrRef2, const int YrRefGrow, const int YrRefSel1, const int YrRefSel2,
											dvar3_array d4_Npass, dvar3_array _ft, dvar4_array _Z1, dvar4_array _Z2);
 dvar_vector compute_OFL_and_ABC(const int iyr, const int YrRefGrow, const int YrRefM1, const int YrRefM2,
										 const int YrRefSea1, const int YrRefSea2,const int YrRefSel1, const int YrRefSel2,
										 dvar_vector Rbar, dvar_matrix d4_Npass);
 dvar_vector project_biomass_OFL(const int YrRef2, const int YrRefGrow, 
        const int YrRefM1, const int YrRefM2, const int YrRefSea1, const int YrRefSea2, 
        const int YrRefSel1, const int YrRefSel2, dvar_vector Rbar, const int iproj, dvar_matrix d4_Npass);
 void calc_spr_reference_points2(const int DoProfile);
  void write_eval(void);
  void calc_sdreport(void);
 void get_all_sdnr_MAR();
 dvector calc_sdnr_MAR(dvector tmpVec);
 dvector calc_sdnr_MAR(dmatrix tmpMat);
 dvector calc_Francis_weights();
  void CreateOutput(void);
  void WriteFiles(void);
  void MyOutput(void);
 dvariable CalcStateTAC(const int i, const int iproj,const int YrRefGrow);
 dvariable StMatsTAC(const int j, const int iproj,const int YrRefGrow);

};
#endif
